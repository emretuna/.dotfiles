{
  //Window
  "window.menuBarVisibility": "hidden",
  "workbench.colorTheme": "Kanagawa Wave",
  "workbench.colorCustomizations": {
    //"[Kanagawa Wave]": {
    "activityBar.background": "#1F1F27",
    "activityBar.border": "#16161C",
    "editorGroup.border": "#00000000",
    "sideBar.border": "#16161C"
    // }
  },
  //Editor
  "editor.fontFamily": "BlexMono Nerd Font, monospace", //Alternatives: BlexMono Nerd Font, DejavuSansMono Nerd Font, MesloLGS Nerd Font, Iosevka Nerd Font, JetBrainsMono Nerd Font, Fira Code Retina
  "editor.fontLigatures": true,
  "editor.fontSize": 14,
  "editor.fontWeight": "normal",
  "editor.cursorStyle": "line",
  "editor.cursorWidth": 5,
  "editor.cursorBlinking": "phase",
  "editor.snippetSuggestions": "top",
  "editor.semanticHighlighting.enabled": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "breadcrumbs.enabled": false,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.unicodeHighlight.includeStrings": false,
  "editor.accessibilitySupport": "off",
  "editor.folding": true,
  "editor.hideCursorInOverviewRuler": true,
  "editor.occurrencesHighlight": false,
  "editor.roundedSelection": false,
  "editor.selectionHighlight": false,
  "editor.scrollBeyondLastLine": false,
  "editor.codeActionsOnSave": {
    "source.organizeImports": false
  },
  "editor.maxTokenizationLineLength": 10000000,
  "editor.linkedEditing": true,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          //following will be in italics (=Pacifico)
          "comment",
          "entity.name.type.class", //class names
          "keyword", //import, export, return…
          "support.class.builtin.js", //String, Number, Boolean…, this, super
          "storage.modifier", //static keyword
          "storage.type.class.js", //class keyword
          "storage.type.function.js", // function keyword
          "storage.type.js", // Variable declarations
          "keyword.control.import.js", // Imports
          "keyword.control.from.js", // From-Keyword
          "entity.name.type.js", // new … Expression
          "keyword.control.flow.js", // await
          "keyword.control.conditional.js", // if
          "keyword.control.loop.js", // for
          "keyword.operator.new.js", // new
          //settings for typescript
          "support.type.primitive.ts",
          "entity.name.type.ts",
          "meta.type.tuple.ts",
          "meta.type.annotation.ts",
          "meta.type.parameters.ts",
          "keyword.operator.type.ts",
          "meta.return.type.arrow.ts",
          "keyword.operator.type.annotation.ts",
          "meta.return.type.ts",
          "punctuation.definition.typeparameters.begin.ts",
          "punctuation.definition.typeparameters.end.ts"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          //following will be excluded from italics (My theme (Monokai dark) has some defaults I don't want to be in italics)
          "invalid",
          "keyword.operator",
          "constant.numeric.css",
          "keyword.other.unit.px.css",
          "constant.numeric.decimal.js",
          "constant.numeric.json",
          "entity.name.type.class.js"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.inlineSuggest.enabled": true,

  // Terminal
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.fontSize": 13,
  "workbench.editor.enablePreview": false,
  "window.zoomLevel": 0,
  "workbench.activityBar.visible": true,
  "workbench.editor.showIcons": false,
  "workbench.startupEditor": "none",
  "workbench.tree.renderIndentGuides": "none",

  //Autoimport
  "autoimport.filesToScan": "**/*.{jsx,js,vue,ts,tsx}",
  "autoimport.useSemiColon": false,

  //Language
  "googleTranslateExt.languages": ["en", "ar", "tr", "fa", "de", "es", "it"],
  "googleTranslateExt.replaceText": true,
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "i18n-ally.dirStructure": "auto",
  "i18n-ally.pathMatcher": "{locale}/index.{ext}",
  "i18n-ally.enabledParsers": ["ts", "js"],
  "i18n-ally.disablePathParsing": true,
  "i18n-ally.displayLanguage": "en",
  "i18n-ally.sourceLanguage": "en",
  "i18n-ally.translate.engines": [],
  //Explorer
  "explorer.confirmDragAndDrop": true,
  "explorer.confirmDelete": true,
  "explorer.decorations.colors": false,
  "explorer.openEditors.visible": 0,
  "explorer.compactFolders": false,

  //Javascript
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.autoClosingTags": true,
  "javascript.suggest.autoImports": true,

  //Typescript
  "typescript.autoClosingTags": true,
  "typescript.suggest.autoImports": true,
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  //Colorize
  "colorize.languages": ["javascript", "typescript"],
  // Formatters
  "eslint.enable": true,
  "eslint.format.enable": true,
  "prettier.bracketSameLine": true,
  "prettier.jsxSingleQuote": true,
  "prettier.singleQuote": true,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // Json
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "json.maxItemsComputed": 25000,
  // Material UI
  "material-ui-snippets.showNotesOnStartup": false,
  // Focus
  "focus.highlightRange": "indent",
  "focus.opacity": "0.6",
  //Error Lens
  "errorLens.delay": 2000,
  "errorLens.enabledDiagnosticLevels": [
    "error",
    "warning"
    //"info"
  ],
  "errorLens.fontFamily": "JetBrainsMono Nerd Font",
  "errorLens.fontSize": "12",
  "errorLens.fontWeight": "100",
  "cSpell.language": "en,it,lorem",
  "editor.minimap.enabled": false,
  "workbench.iconTheme": "helium-icon-theme",
  "helium-icon-theme.folders.color": "#e5c07b",
  "workbench.layoutControl.enabled": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "githubPullRequests.pullBranch": "never",
  "telemetry.telemetryLevel": "off"
}
